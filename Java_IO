/* Test basic methods of Scanner class usage to read inputs from the keyboard (Ex code in
TestScanner.java)*/
        Steps:
        Create 2 Scanner objects wrapping System.in like this (import java.util.* as well):
        Scanner sc1 = new Scanner(System.in);
        Scanner sc2 = new Scanner(System.in);
        System.out.println("Enter a string input");
        String s1 = sc1.next(); // to read a single word input
        //print s1
        System.out.println("Enter int as input");
        int n = sc1.nextInt();
        System.out.println("n = "+n);
        double d = sc1.nextDouble();
        //print d
        String line = sc2.nextLine(); // sentence input
        //print line
        Check out other methods usage of Scanner class to read a boolean, float, long and print the
        contents to the monitor. Remember to use sc2.nextLine() on a separate scanner.

=======================================================================================================================================
/*Test basic methods of File class usage (Ex code in TestFile.java)*/

      import java.io.File;

      public class TestFile {

        public static void main(String[] args) {

          if(args.length>0)
          {
                System.out.println("args[0] = "+args[0]);
                File f1 = new File(args[0]);
                System.out.println("does f1 exist ? "+f1.exists());
                System.out.println("is directory ? "+f1.isDirectory());
                System.out.println("is file ? "+f1.isFile());
                System.out.println("abs path = "+f1.getAbsolutePath());
                System.out.println("size = "+ f1.length());
                System.out.println("is hidden ? "+f1.isHidden());
                System.out.println("----------------");
                if(f1.exists() && f1.isDirectory())
                {
                  System.out.println("listing contents of "+f1.getName());
                  File[] fa = f1.listFiles();
                  for(File f : fa)
                  {
                    System.out.println(f.getAbsolutePath());
                  }
                }
          }
          else
                System.out.println("pls give at least one path as input");
          }
       }  
       
       
=======================================================================================================================================  ====================================================================================================================================
/*Write a program to read input path of a text file from the user and print its contents to the monitor.Code it directly in main() for now.*/

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;

public class IOQuestion3 {

	public static void main(String[] args) {
		Scanner sc1=new Scanner(System.in);
		System.out.println("enter the input of the file");
		String path=sc1.next();
		BufferedReader br=null;
		String line;
		try
		{
			br=new BufferedReader(new FileReader(path));
			while((line=br.readLine())!=null)
			{
				System.out.println(line);//reading the contents of the file
			}
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
		finally
		{
			if(br!=null)
				try {
					br.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
		}

	}

}
========================================================================================================================================
/*Take 2 paths as input from user (first to an existing text file and second to one that does not exist). From one, read the file content
 and write it to another. (Ex code in TestIO.java, TestReading.java and ReadFileAndPrint.java)!



















